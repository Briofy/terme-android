// Generated by view binder compiler. Do not edit!
package net.lynqfy.offical.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.lynqfy.offical.R;

public final class LyMonthYearPickerDialogUiBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnMonthNext;

  @NonNull
  public final ImageView btnMonthPrev;

  @NonNull
  public final LinearLayout footer;

  @NonNull
  public final GridView grid;

  @NonNull
  public final MaterialTextView title;

  @NonNull
  public final MaterialButton txtCancel;

  @NonNull
  public final MaterialButton txtToday;

  private LyMonthYearPickerDialogUiBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnMonthNext, @NonNull ImageView btnMonthPrev,
      @NonNull LinearLayout footer, @NonNull GridView grid, @NonNull MaterialTextView title,
      @NonNull MaterialButton txtCancel, @NonNull MaterialButton txtToday) {
    this.rootView = rootView;
    this.btnMonthNext = btnMonthNext;
    this.btnMonthPrev = btnMonthPrev;
    this.footer = footer;
    this.grid = grid;
    this.title = title;
    this.txtCancel = txtCancel;
    this.txtToday = txtToday;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LyMonthYearPickerDialogUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LyMonthYearPickerDialogUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ly_month_year_picker_dialog_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LyMonthYearPickerDialogUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMonthNext;
      ImageView btnMonthNext = ViewBindings.findChildViewById(rootView, id);
      if (btnMonthNext == null) {
        break missingId;
      }

      id = R.id.btnMonthPrev;
      ImageView btnMonthPrev = ViewBindings.findChildViewById(rootView, id);
      if (btnMonthPrev == null) {
        break missingId;
      }

      id = R.id.footer;
      LinearLayout footer = ViewBindings.findChildViewById(rootView, id);
      if (footer == null) {
        break missingId;
      }

      id = R.id.grid;
      GridView grid = ViewBindings.findChildViewById(rootView, id);
      if (grid == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.txtCancel;
      MaterialButton txtCancel = ViewBindings.findChildViewById(rootView, id);
      if (txtCancel == null) {
        break missingId;
      }

      id = R.id.txtToday;
      MaterialButton txtToday = ViewBindings.findChildViewById(rootView, id);
      if (txtToday == null) {
        break missingId;
      }

      return new LyMonthYearPickerDialogUiBinding((ConstraintLayout) rootView, btnMonthNext,
          btnMonthPrev, footer, grid, title, txtCancel, txtToday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
