// Generated by view binder compiler. Do not edit!
package net.lynqfy.offical.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.lynqfy.offical.R;

public final class LyCalendarUiBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final GridView calendarGrid;

  @NonNull
  public final TextView day1;

  @NonNull
  public final TextView day2;

  @NonNull
  public final TextView day3;

  @NonNull
  public final TextView day4;

  @NonNull
  public final TextView day5;

  @NonNull
  public final TextView day6;

  @NonNull
  public final TextView day7;

  @NonNull
  public final TextView txtSelectedMonth;

  private LyCalendarUiBinding(@NonNull LinearLayout rootView, @NonNull GridView calendarGrid,
      @NonNull TextView day1, @NonNull TextView day2, @NonNull TextView day3,
      @NonNull TextView day4, @NonNull TextView day5, @NonNull TextView day6,
      @NonNull TextView day7, @NonNull TextView txtSelectedMonth) {
    this.rootView = rootView;
    this.calendarGrid = calendarGrid;
    this.day1 = day1;
    this.day2 = day2;
    this.day3 = day3;
    this.day4 = day4;
    this.day5 = day5;
    this.day6 = day6;
    this.day7 = day7;
    this.txtSelectedMonth = txtSelectedMonth;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LyCalendarUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LyCalendarUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ly_calendar_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LyCalendarUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarGrid;
      GridView calendarGrid = ViewBindings.findChildViewById(rootView, id);
      if (calendarGrid == null) {
        break missingId;
      }

      id = R.id.day1;
      TextView day1 = ViewBindings.findChildViewById(rootView, id);
      if (day1 == null) {
        break missingId;
      }

      id = R.id.day2;
      TextView day2 = ViewBindings.findChildViewById(rootView, id);
      if (day2 == null) {
        break missingId;
      }

      id = R.id.day3;
      TextView day3 = ViewBindings.findChildViewById(rootView, id);
      if (day3 == null) {
        break missingId;
      }

      id = R.id.day4;
      TextView day4 = ViewBindings.findChildViewById(rootView, id);
      if (day4 == null) {
        break missingId;
      }

      id = R.id.day5;
      TextView day5 = ViewBindings.findChildViewById(rootView, id);
      if (day5 == null) {
        break missingId;
      }

      id = R.id.day6;
      TextView day6 = ViewBindings.findChildViewById(rootView, id);
      if (day6 == null) {
        break missingId;
      }

      id = R.id.day7;
      TextView day7 = ViewBindings.findChildViewById(rootView, id);
      if (day7 == null) {
        break missingId;
      }

      id = R.id.txtSelectedMonth;
      TextView txtSelectedMonth = ViewBindings.findChildViewById(rootView, id);
      if (txtSelectedMonth == null) {
        break missingId;
      }

      return new LyCalendarUiBinding((LinearLayout) rootView, calendarGrid, day1, day2, day3, day4,
          day5, day6, day7, txtSelectedMonth);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
